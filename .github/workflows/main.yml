# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Run tests

on:
  push:
    branches: [ bit , initial-bit-integration ]
  pull_request:
    branches: [ bit , initial-bit-integration ]

vm-job:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
        # will assign a random free host port
        - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v1     
    - run: npm ci
      working-directory: ./postgres
    - run: node client.js
      working-directory: ./postgres
      env:
        # use localhost for the host here because we are running the job on the VM.
        # If we were running the job on in a container this would be postgres
        POSTGRES_HOST: localhost
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
    - name: check verison
      run: |  
        psql --version
        psql --host 
    - name: Connect to PostgreSQL
      run: |
        psql -c 'CREATE DATABASE bit_schema_test;' -U postgres
        psql -c 'CREATE SCHEMA bitschema;' -U postgres -d bit_schema_test
        psql -c 'CREATE SCHEMA test_schema;' -U postgres -d bit_schema_test
        psql -c 'create SCHEMA test_schema_2;' -U postgres -d bit_schema_test
        psql -c '\dn;' -U postgres -d bit_schema_test
        psql -c 'show search_path;' -U postgres -d bit_schema_test
        psql -c "ALTER DATABASE bit_schema_test SET search_path TO bitschema,public;" -U postgres -d bit_schema_test
        psql -c 'show search_path;' -U postgres -d bit_schema_test
      env:
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run tests
      run: |
        python -m unittest discover tests -v
    - name: Generate coverage report
      run: |
        pip install pytest
        pip install pytest-cov
        pytest --cov=./ --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        name: codecov-umbrella
        fail_ci_if_error: true
